/* === General CSS Topics === */
:root {
    --main-bg-color: hsl(210, 90%, 70%);
    --fallback-color: orange;
    --spacing-unit: 2rem;
  }
  
  body {
    background-color: var(--main-bg-color, var(--fallback-color));
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    color: rgb(33, 33, 33);
  }
  
  /* === Header === */
  header {
    background-color: rgba(0, 128, 128, 0.85); /* teal + alpha */
    color: white;
    text-align: center;
    padding: 2rem;
    border-bottom: 4px solid #fff;
  }
  
  /* === Navigation === */
  nav ul {
    display: flex;
    justify-content: space-around;
    padding: 0.5cm;
    list-style: none;
    margin: auto;
    background-color: #FFFFFF;
  }
  
  /* === Units (3 relative, 3 absolute) === */
  main {
    max-width: 90vw;    /* relative */
    min-width: 300px;   /* absolute */
    width: 80%;
    font-size: 1.2em;   /* relative */
    line-height: 1.5rem;/* relative */
    padding: 24pt;      /* absolute */
  }
  
  /* === Box Model: margin, padding, border === */
  section {
    margin-top: 1rem;
    margin-bottom: 1rem;
    margin-left: 2rem;
    margin-right: 2rem;
  
    padding-top: 1rem;
    padding-bottom: 1rem;
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  
    border-style: solid;
    border-color: #ddd;
    border-width: 2px;
    border-radius: 10px;
  }
  
  footer {
    margin: auto;
    padding: 1rem 2rem;
    border: 2px dashed #888;
    border-radius: 8px;
  }
  
  /* === Text Styling === */
  h1, h2, h3 {
    color: #004a99;
    text-align: center;
    text-decoration: underline;
  }
  
  /* === Display Types === */
  img {
    display: block;
    max-width: 100%;
    height: auto;
  }
  
  audio, video {
    display: inline-block;
  }
  
  /* === Sizing === */
  video {
    height: auto;
    width: 400px;
    max-width: 100%;
    min-width: 200px;
  }
  
  /* === Positioning === */
  nav {
    position: sticky;
    top: 0;
    background-color: white;
  }
  
  #feedback {
    position: relative;
  }
  
  .footer-note {
    position: relative;
    bottom: 10px;
    left: 10px;
  }
  
  /* === Pseudo-classes === */
button:hover {
    color: rgb(20, 220, 63);
  }
  
  button:active {
    transform: scale(0.98);
  }
  
  #discussion {
    display: grid;                              
    grid-template-columns: 1fr 1fr;             
    gap: 1rem;                                 
    place-items: start stretch;                 
  }
  
  /* === Responsive Layout: Media Query === */
@media (max-width: 768px) {
    nav ul {
      flex-direction: column;          /* Stack nav links on small screens */
      align-items: flex-start;
    }
  
    #discussion {
      grid-template-columns: 1fr;      /* Collapse grid to single column */
    }
  
    section {
      margin: 1rem;
      padding: 1rem;
    }
  
    h1, h2, h3 {
      font-size: 1.2rem;
      text-align: left;
    }
  
    video {
      width: 100%;
    }
  
    form {
      padding: 1rem;
    }
  }
  
  /* === Universal Selector === */
* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
  }
  
  /* === Element Selector === */
  section {
    background-color: #fdfdfd;
  }
  
  /* === Class Selector === */
  .footer-note {
    font-size: 0.9rem;
    color: gray;
  }
  
  /* === ID Selector === */
  #feedback {
    background-color: #f9f9ff;
    border-left: 4px solid #888;
  }
  
  /* === Attribute Selector === */
  input[type="text"] {
    border: 2px solid #ccc;
    padding: 0.5rem;
  }
  
  /* === Pseudo-class Selector === */
  a:hover {
    color: darkred;
  }
  
  /* === Selector List (multiple elements) === */
  h1, h2, h3 {
    font-family: 'Poppins', sans-serif;
    color: #004a99;
  }
  
  /* === Descendant Combinator (element element) === */
  form label {
    font-weight: bold;
  }
  
  /* === Child Combinator (element > element) === */
  form > fieldset {
    padding: 1rem;
    border-radius: 10px;
  }
  
  /* === General Sibling Combinator (element ~ element) === */
  input[type="radio"]:checked ~ label {
    color: green;
  }
  
  /* === Adjacent Sibling Combinator (element + element) === */
  input[type="checkbox"] + label {
    font-style: italic;
  }
  
  /* === Combining Two Selectors (element.class) === */
  p.footer-note {
    text-align: center;
  }
  
  /* === Modern Selector: :has() === */
  form:has(textarea:focus) {
    border: 2px dashed #007acc;
  }
  
  /* === Nested Selectors === */
  form {
    & button {
      background-color: #299900;
      color: white;
      border: none;
      padding: 0.5rem 1rem;
      border-radius: 4px;
    }
  
    & button:hover {
      background-color: #cc3d00;
    }
  }
  